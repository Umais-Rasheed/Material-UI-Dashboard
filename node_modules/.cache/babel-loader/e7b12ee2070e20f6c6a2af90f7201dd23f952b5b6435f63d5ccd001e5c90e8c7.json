{"ast":null,"code":"var _jsxFileName = \"E:\\\\1-Umais\\\\layout-MUi\\\\my-dashboard\\\\src\\\\Components\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { LineChart } from '@mui/x-charts/LineChart';\nimport Stack from '@mui/material/Stack';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tableau10 = ['#4e79a7', '#f28e2c'];\nconst chartsParams = {\n  margin: {\n    bottom: 5,\n    left: 30,\n    right: 5\n  },\n  height: 300\n};\nexport default function BasicColor() {\n  _s();\n  const [color, setColor] = React.useState('#4e79a7');\n  const handleChange = (event, nextColor) => {\n    setColor(nextColor);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lineChart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"inharit\",\n        sx: {\n          flexGrow: 1,\n          fontSize: '35px'\n        },\n        children: \"Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"column\",\n      spacing: 2,\n      alignItems: \"center\",\n      sx: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(LineChart, {\n        ...chartsParams,\n        series: [{\n          data: [15, 23, 18, 19, 13],\n          color\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup\n      // orientation=\"vertical\"\n      , {\n        value: color,\n        exclusive: true,\n        onChange: handleChange,\n        children: Tableau10.map(value => /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: value,\n          sx: {\n            p: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 15,\n              height: 15,\n              backgroundColor: value,\n              display: 'inline-block'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(BasicColor, \"zmARyCcr6uTS5aBSxRa7uZcHTto=\");\n_c = BasicColor;\nvar _c;\n$RefreshReg$(_c, \"BasicColor\");","map":{"version":3,"names":["React","LineChart","Stack","ToggleButton","ToggleButtonGroup","Typography","jsxDEV","_jsxDEV","Tableau10","chartsParams","margin","bottom","left","right","height","BasicColor","_s","color","setColor","useState","handleChange","event","nextColor","className","children","sx","flexGrow","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","direction","spacing","alignItems","width","series","data","value","exclusive","onChange","map","p","style","backgroundColor","display","_c","$RefreshReg$"],"sources":["E:/1-Umais/layout-MUi/my-dashboard/src/Components/Chart.js"],"sourcesContent":["import * as React from 'react';\r\nimport { LineChart } from '@mui/x-charts/LineChart';\r\nimport Stack from '@mui/material/Stack';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst Tableau10 = [\r\n  '#4e79a7',\r\n  '#f28e2c',\r\n];\r\n\r\nconst chartsParams = {\r\n  margin: { bottom: 5, left: 30, right: 5 },\r\n  height: 300,\r\n};\r\nexport default function BasicColor() {\r\n  const [color, setColor] = React.useState('#4e79a7');\r\n\r\n  const handleChange = (event, nextColor) => {\r\n    setColor(nextColor);\r\n  };\r\n\r\n  return (\r\n    <div className='lineChart'>\r\n        <div className='heading'>\r\n        <Typography\r\n        color='inharit'\r\n        sx={{ flexGrow: 1, fontSize: '35px' }}\r\n        >\r\n        Orders\r\n        </Typography>\r\n        </div>\r\n        <Stack direction=\"column\" spacing={2} alignItems=\"center\" sx={{ width: '100%' }}>\r\n        <LineChart\r\n            {...chartsParams}\r\n            series={[\r\n            {\r\n                data: [15, 23, 18, 19, 13],\r\n                color,\r\n            },\r\n            ]}\r\n        />\r\n        <ToggleButtonGroup\r\n            // orientation=\"vertical\"\r\n            value={color}\r\n            exclusive\r\n            onChange={handleChange}\r\n        >\r\n            {Tableau10.map((value) => (\r\n            <ToggleButton key={value} value={value} sx={{ p: 1 }}>\r\n                <div\r\n                style={{\r\n                    width: 15,\r\n                    height: 15,\r\n                    backgroundColor: value,\r\n                    display: 'inline-block',\r\n                }}\r\n                />\r\n            </ToggleButton>\r\n            \r\n            ))}\r\n        </ToggleButtonGroup>\r\n        </Stack>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}